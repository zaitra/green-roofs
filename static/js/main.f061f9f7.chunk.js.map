{"version":3,"sources":["i18n.ts","containers/App/coordinates.ts","components/Marker/index.tsx","components/MapLegend/index.tsx","components/Map/index.tsx","components/Navbar/index.tsx","components/SectionTop/index.tsx","components/H2/index.tsx","components/P/index.tsx","components/Shine/index.tsx","components/Container/index.tsx","components/SectionExplanation/index.tsx","components/SectionMotivation/index.tsx","components/MapContainer/index.tsx","components/Footer/index.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx","svg/zaitra-logo.svg","img/heatmap.jpg","svg/green-roofs-logo-leaf.svg","svg/green-roofs-logo.svg","img/heatmap-after.jpg"],"names":["resources","en","translation","cz","translationCZ","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","centerPrague","centerHlavni","bbOneBounds","bbTwoBounds","heatBounds","Marker","lat","className","MapLegend","props","state","leafletElement","createLeafletElement","this","createLegend","translations","t","legend","L","Control","position","onAdd","div","DomUtil","create","categories","type","description","prague","different","labels","map","category","categoryType","push","afterclick","innerHTML","join","leaflet","addTo","MapControl","withLeaflet","defaultGeo","fillOpacity","weight","opacity","color","getStyleByFeatureCategoryNumber","categoryNumber","console","error","Error","getCategoryNumberByProperties","properties","cat1","cat2","cat3","cat4","attachComponentToPopup","feature","GetCenterFromDegrees","geometry","coordinates","center3d","el","document","getElementsByClassName","objectid","ReactDOM","render","style","height","width","padding","bootstrapURLKeys","key","defaultCenter","defaultZoom","options","disableDefaultUI","mapTypeId","rotateControl","vlastnictvi","vyuziti_uzemi","shape_area","toFixed","Map","geojsonData","zoom","center","bounds","heatMapBounds","geoStyle","addFeatures","popups","heatMapImg","useTranslation","onEachFeature","layer","featureCategoryNumber","featureStyle","setStyle","on","e","lati","lngd","url","win","window","open","focus","bindPopup","keepInView","closePopup","openPopup","translationsLegend","scrollWheelZoom","TileLayer","bound","Rectangle","shortid","generate","GeoJSON","data","undefined","length","ImageOverlay","num_coords","X","Y","Z","i","Math","PI","lon","cos","sin","atan2","hyp","sqrt","Navbar","changeLanguage","href","target","rel","src","logo","alt","onClick","SectionTop","H2","children","P","Shine","Container","SectionExplanation","i18nKey","SectionMotivation","MapContainer","Footer","App","allRoofs","bb1Roofs","bb2Roofs","heatmapImg","bb1Categ","bb2Categ","heatmapImgAfter","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f061f9f7.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationCZ from \"./locales/cz/translation.json\";\nimport translationEN from \"./locales/en/translation.json\";\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  cz: {\n    translation: translationCZ\n  }\n};\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"cz\",\n    fallbackLng: \"cz\", // use en if detected lng is not available\n    keySeparator: \".\",\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","/// Center of Prague\nexport const centerPrague = [50.086385, 14.423693];\nexport const centerHlavni = [50.085433, 14.429571];\n// first rectangle\nexport const bbOneBounds = [\n  [50.090759, 14.428063],\n  [50.087322, 14.437146]\n];\n// second rectangle\nexport const bbTwoBounds = [\n  [50.086436, 14.424331],\n  [50.0795, 14.432383]\n];\n// heat coordinates\nexport const heatBounds = [\n  [49.91156, 13.90904],\n  [50.2512, 14.89781]\n];\n","import React from 'react';\n\nexport const Marker = ({lat, lng} :any) => (\n    <div className=\"marker\"/>\n);\n\nexport default Marker;","import { MapControl, withLeaflet} from \"react-leaflet\";\n\nimport L from \"leaflet\";\n\n\nclass MapLegend extends MapControl<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.leafletElement = this.createLeafletElement(this.props)\n\t}\n\tcreateLeafletElement(props :any ){\n\t\treturn props\n\t}\n\n\t// updateLeafletElement(fromProps :any, toProps :any) {\n\t// \tconsole.log(this.leafletElement.leaflet.layerContainer)\n\t// \t// }\n\t// \tif(fromProps.translations != toProps.translations){\n\n\t// \t\tconsole.log('zmena updateLeafletElement!!', toProps.translations)\n\t// \t\t// TODO: HACK!\n\t// \t\tthis.createLegend(toProps.translations)\n\t// \t}\n\t// }\n\tcomponentDidMount() {\n\n\t\tthis.createLegend(this.props.translations);\n\t}\n\n\tcreateLegend(t: any) {\n\t\t// get color depending on category type\n\t\tconst getColor = (categoryType :any) => {\n\t\treturn categoryType === \"1\"\n\t\t\t? \"#7f00ff\" // purple\n\t\t\t: categoryType === \"2\"\n\t\t\t? \"#4990E2\"\n\t\t\t: \"#009548\"\n\t\t};\n\t\tconst legend = new L.Control({ position: \"bottomright\" });\n\t\n\t\tlegend.onAdd = () => {\n\t\tconst div = L.DomUtil.create(\"div\", \"info legend\")\n\t\tconst categories = [{\n\t\t\ttype: \"1\",\n\t\t\tdescription: t.prague\n\t\t}, \n\t\t{\n\t\t\ttype: \"2\",\n\t\t\tdescription: t.cz\n\t\t},\n\t\t{\n\t\t\ttype: \"3/4\",\n\t\t\tdescription: t.different\n\t\t}];\n\t\tlet labels :any = [];\n\n\t\tcategories.map(category => {\t\t  \n\t\t\tlabels.push(\n\t\t\t`<i style=\"background: ${getColor(category.type)}\"></i> \n\t\t\t${t.category} ${category.type} (${category.description})`\n\t\t\t);\n\t\t})\n\t\tlabels.push(`<span>* ${t.afterclick}</span>`)\n\t\tdiv.innerHTML = labels.join(\"<br>\");\n\t\treturn div;\n\t\t};\n\t\n\t\tconst { map } = this.props.leaflet;\n\t\tlegend.addTo(map);\n\t}\n }\n\nexport default withLeaflet(MapLegend);","import React, { useState, useEffect } from 'react'\nimport ReactDOM from \"react-dom\";\nimport shortid from \"shortid\"\nimport {\n  Map as LeafletMap,\n  TileLayer,\n  GeoJSON,\n  Rectangle,\n  ImageOverlay\n} from \"react-leaflet\"\nimport { LatLngBoundsExpression, popup } from 'leaflet'\nimport { useTranslation } from \"react-i18next\"\nimport GoogleMapReact from 'google-map-react'\nimport { IMapProps } from \"../../types\"\nimport { Marker } from '../Marker';\nimport MapLegend from '../MapLegend';\n\nconst defaultGeo = {\n  fillOpacity: 0.7,\n  weight: 2,\n  opacity: 1,\n  color: \"#009548\"\n}\n\nconst Map: React.FC <IMapProps> = ({ \n  geojsonData = [],\n  zoom = 0, center = [0,0], \n  bounds = [],\n  heatMapBounds = [],\n  geoStyle = defaultGeo,\n  addFeatures = true,\n  legend = true,\n  popups = true,\n  heatMapImg = '',\n}) => {\n\tconst { t } = useTranslation();\n\tconst onEachFeature = (feature: any, layer: any) => {\n\t\tconst featureCategoryNumber = getCategoryNumberByProperties(feature.properties);\n\t\tconst featureStyle = getStyleByFeatureCategoryNumber(featureCategoryNumber)\n\t\tlayer.setStyle(featureStyle)\n\t\tconst {lat, lng} :any = GetCenterFromDegrees(feature.geometry.coordinates[0][0])\n\t\tlayer.on('click', (e :any) => {\n\t\t\t// http://maps.google.com/maps?&z=18&mrt=all&t=h&q=40+12\n\t\t\tconst zoom = 20\n\t\t\tconst typeSearch = 'yp'//INSERT_TYPE_OF_SEARCH\n\t\t\tconst mapType = 'm' // TYPE_OF_MAP\n\t\t\tconst lati = lat // INSERT_MAP_LAT_COORDINATES\n\t\t\tconst lngd = lng //INSERT_MAP_LONG_COORDINATES\n\t\t\tconst url = `http://maps.google.com/maps?&z=${zoom}&mrt=${typeSearch}&t=${mapType}&q=${lati}+${lngd}`\n\t\t\tconst win = window.open(url, '_blank');\n\t\t\tif (win != null) {\n\t\t\t  win.focus();\n\t\t\t}\t\t  \n\t\t});\n\n\t\tif (!popups) return;\n\n\t\tlayer.bindPopup('',  {\n\t\t\tclassName: feature.properties.objectid,\n\t\t\tkeepInView: true\n\t\t});\n\t\n\t\tlayer.on('mouseout', (e :any) => {\n\t\t\tlayer.closePopup()\n\t\t});\n\t\n\t\tlayer.on('mouseover', (e :any) => {\n\t\t\tlayer.openPopup()\n\t\t\tattachComponentToPopup(feature, t)\n\t\t});\n\t}\n\tconst translationsLegend = {\n\t\tprague: t(\"map.legend.description.prague\"),\n\t\tcz: t(\"map.legend.description.cz\"),\n\t\tdifferent: t(\"map.legend.description.different\"),\n\t\tcategory: t(\"map.legend.category\"),\n\t\tafterclick: t(\"map.legend.after-click\"),\n\t}\n  return (\n    <LeafletMap zoom={zoom} center={center} scrollWheelZoom={false}>\n      {/* GENERATE map background */}\n      <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n\n      {/*\n        * GENERATE rectangle/s \n        *\n      */}\n      {bounds.map((bound: LatLngBoundsExpression) => {\n        return (\n          <Rectangle\n            bounds={bound}\n            color=\"#009548\"\n            opacity={0.8}\n            fillOpacity={0}\n            key={shortid.generate()}\n          />\n        )\n      })}\n      {/* \n        * GENERATE layer/s of geojson \n        *\n      */}\n      {geojsonData.map((geojsonData: GeoJSON.GeoJsonObject) => {\n\t\treturn <GeoJSON data={geojsonData} \n\t\t\tkey={shortid.generate()}\n\t\t\tstyle={geoStyle}\n\t\t\tonEachFeature={addFeatures ? onEachFeature : undefined} \n\t\t\t/>\n      })}\n\n      {/* \n        * GENERATE Image overlay \n        * \n      */}\n      {heatMapBounds.length > 0 ? (\n        <ImageOverlay url={heatMapImg} bounds={heatMapBounds} opacity={0.80} />\n      ) : null}\n      {/* \n        * GENERATE legend for map\n        * \n      */}\n\t  {/* {console.log('pragggg change', t(\"map.legend.description.prague\"))} */}\n\t  { legend ? <MapLegend translations={translationsLegend} /> : null }\n    </LeafletMap>\n  )\n}\n\n\nconst getStyleByFeatureCategoryNumber = (categoryNumber :number) => {\n\tswitch (categoryNumber) {\n\t\tcase 1:\n\t\t\treturn {\n\t\t\t\tcolor: \"#7f00ff\" // purple\n\t\t\t}\n\t\tcase 2:\n\t\t\treturn {\n\t\t\t\tcolor: \"#4990E2\" // blue\n\t\t\t}\n\t\tcase 3:\n\t\tcase 4:\n\t\t\treturn {\n\t\t\t\tcolor: \"#009548\" // default green\n\t\t\t}\n\t\tdefault:\n\t\t\tconsole.error(\"categoryNumber\", categoryNumber)\n\t\t\tthrow new Error(\"Something is wrong with getStyleByFeatureCategoryNumber method!\")\n\t}\n}\n\nconst getCategoryNumberByProperties = (properties :any) :number => {\n\tconst {\n\t\t\"Kategorie I\": cat1,\n\t\t\"Kategorie II\": cat2,\n\t\t\"Kategorie III\": cat3,\n\t\t\"Kategorie IV\": cat4\n\t} = properties\n\t// Category 1\n\tif (cat1 && cat2 && cat3 && cat4) {\n\t\treturn 1;\n\t}\n\t// Category 2\n\telse if (!cat1 && cat2 && cat3 && cat4) {\n\t\treturn 2;\n\t}\n\t// Category 3\n\telse if (!cat1 && !cat2 && cat3 && cat4) {\n\t\treturn 3;\n\t}\n\t// Category 4\n\treturn 4;\n\t\n}\n\t\nconst attachComponentToPopup = (feature: any, t: any) =>  {\n\tconst bulgarianConstant = 0.00015;\n\tconst {lat, lng} :any = GetCenterFromDegrees(feature.geometry.coordinates[0][0])\n\t// console.log('centerOfBuilding', centerOfBuilding)\n\tconst center3d = {  \n\t\tlat: lat + bulgarianConstant,\n\t\tlng: lng,\n\t  };\n\tlet labelContent = () => {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div style={{ height: '200px', width: '100%', padding: '0 0 25px' }} className=\"google-map\">\n\t\t\t\t\t<GoogleMapReact \n\t\t\t\t\t\tbootstrapURLKeys={{ key: \"AIzaSyA_7d7iWDbFsq50av6Py5zqhJAaSkfwGn4\" }}\n\t\t\t\t\t\tdefaultCenter={center3d}\n\t\t\t\t\t\tdefaultZoom={18}\t\t\t\t\t\n\t\t\t\t\t\toptions = {{\n\t\t\t\t\t\t\tdisableDefaultUI: true,\n\t\t\t\t\t\t\tmapTypeId: \"hybrid\",\n\t\t\t\t\t\t\trotateControl: false\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Marker lat={center3d.lat} lng={center3d.lng} />\n\n\t\t\t\t\t</GoogleMapReact>\n\t\t\t\t</div>\n\t\t\t\t<span><strong>{t('map.popup.owner')}:</strong> {feature.properties.vlastnictvi}</span><br/>\n\t\t\t\t<span><strong>{t('map.popup.used-for')}:</strong> {feature.properties.vyuziti_uzemi}</span><br/>\n\t\t\t\t<span><strong>{t('map.popup.area')}:</strong> {feature.properties.shape_area.toFixed(2)} m2</span><br/><br/>\n\t\t\t</div>\n\t\t)\n\t}\n\t// console.log('el', document.getElementsByClassName('leaflet-popup-pane')[0])\n\tlet el = document.getElementsByClassName(feature.properties.objectid)[0];\n\t\n\tif (el) {\n\t\tReactDOM.render(\n\t\t\tlabelContent(),\n\t\t\tel\n\t\t);\n\t}\n}\n\nexport default Map\n\n/**\n * Get a center latitude,longitude from an array of like geopoints\n *\n * @param array data 2 dimensional array of latitudes and longitudes\n * For Example:\n * $data = array\n * (\n *   0 = > array(45.849382, 76.322333),\n *   1 = > array(45.843543, 75.324143),\n *   2 = > array(45.765744, 76.543223),\n *   3 = > array(45.784234, 74.542335)\n * );\n*/\nfunction GetCenterFromDegrees(data :any) {\n    if (!(data.length > 0)){\n        return false;\n    } \n\n    var num_coords = data.length;\n\n    var X = 0.0;\n    var Y = 0.0;\n    var Z = 0.0;\n\n    for(let i = 0; i < data.length; i++){\n        var lat = data[i][0] * Math.PI / 180;\n        var lon = data[i][1] * Math.PI / 180;\n\n        var a = Math.cos(lat) * Math.cos(lon);\n        var b = Math.cos(lat) * Math.sin(lon);\n        var c = Math.sin(lat);\n\n        X += a;\n        Y += b;\n        Z += c;\n    }\n\n    X /= num_coords;\n    Y /= num_coords;\n    Z /= num_coords;\n\n    var lon = Math.atan2(Y, X);\n    var hyp = Math.sqrt(X * X + Y * Y);\n    var lat = Math.atan2(Z, hyp);\n\n    var newX = (lat * 180 / Math.PI);\n    var newY = (lon * 180 / Math.PI);\n\n    return {\n\t\tlng: newX,\n\t\tlat: newY\n\t};\n}","import React from \"react\";\nimport i18n from \"../../i18n\";\nimport logo from \"../../svg/zaitra-logo.svg\";\n\nconst Navbar: React.FC = () => {\n  const changeLanguage = (lng: any) => {\n    i18n.changeLanguage(lng);\n  };\n  return (\n    <nav className=\"navbar navbar-light fixed-top justify-content-between\">\n      <a\n        href=\"https://zaitra.io/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"navbar-brand\"\n      >\n        <img src={logo} alt=\"Company zaitra logo\" />\n      </a>\n      <div className=\"list\">\n        <button\n          className=\"btn my-2 my-sm-0\"\n          onClick={() => changeLanguage(\"en\")}\n          type=\"button\"\n        >\n          EN\n        </button>\n        <button\n          className=\"btn my-2 my-sm-0\"\n          onClick={() => changeLanguage(\"cz\")}\n          type=\"button\"\n        >\n          CZ\n        </button>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport logo from \"../../svg/green-roofs-logo.svg\"\nimport { useTranslation } from \"react-i18next\";\n\nconst SectionTop: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"header\">\n      <div className=\"text-vertical-center\">\n        <img src={logo} className=\"logo\" alt=\"Green roofs\" />\n        <h2>{t('sections.top.header')}</h2>\n        <p>{t('sections.top.description')}</p>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a className=\"arrows\">\n          <span /> <span />\n        </a>\n      </div>\n    </div>\n  )\n}\n\nSectionTop.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  t: PropTypes.func\n}\n\nexport default SectionTop\n","import React from \"react\"\nimport { H2Props } from \"../../types\"\n\nconst H2: React.FC<H2Props> = (props) => {\n  return <h2 className={`${props.className} h2`}> {props.children}</h2>\n}\n\nexport default H2\n","import React from \"react\"\nimport { IPProps } from \"../../types\"\n\nconst P: React.FC<IPProps> = (props) => {\n  return <p className={`paragraph ${props.className}`}> {props.children}</p>\n}\n\nexport default P \n","import React from \"react\"\nimport { IShineProps } from \"../../types\"\n\nconst Shine: React.FC<IShineProps> = (props) => {\n  return <span className=\"shine\"> {props.children}</span>\n}\n\nexport default Shine\n","import React from \"react\"\nimport { IContainerProps } from \"../../types\"\n\nconst Container: React.FC<IContainerProps> = (props) => {\n  return <div className={`container ${props.className}`}> {props.children}</div>\n}\n\nexport default Container\n","import React from \"react\"\nimport H2 from \"../H2\"\nimport P from \"../P\"\nimport Shine from \"../Shine\"\nimport Container from \"../Container\"\nimport { Trans, useTranslation } from \"react-i18next\"\n\nconst SectionExplanation: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <section className=\"section text-center\">\n      <Container>\n        <H2>\n          <Trans i18nKey=\"sections.explanation.header\">\n            <Shine>.</Shine>\n          </Trans>\n        </H2>\n        <P className=\"mt-5\">\n          <Trans i18nKey=\"sections.explanation.description\">\n            {/* each <0></0> tag from translation replace with shine component */}\n            {/* See for details: https://react.i18next.com/latest/trans-component */}\n            <Shine>.</Shine>\n          </Trans>\n        </P>\n      </Container>\n    </section>\n  )\n}\n\nexport default SectionExplanation\n","import React from \"react\"\nimport H2 from \"../H2\"\nimport P from \"../P\"\nimport Shine from \"../Shine\"\nimport Container from \"../Container\"\nimport { useTranslation, Trans } from \"react-i18next\"\n\nconst SectionMotivation: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <section className=\"section motivation text-center\">\n      <Container>\n        <H2 className=\"mt-4\">\n          <Shine>{t(\"sections.motivation.header\")}</Shine>\n        </H2>\n        <P className=\"my-5 white\">\n          <Trans i18nKey=\"sections.motivation.par1\">\n            <Shine>.</Shine>\n            <a href=\"https://golemio.cz/cs/node/1443\" target=\"blank\" className=\"shine\"></a>\n          </Trans>\n        </P>\n        <P className=\"mb-5 white\">\n          <Trans i18nKey=\"sections.motivation.par2\">\n              <Shine>.</Shine>\n          </Trans>\n        </P>\n      </Container>\n    </section>\n  )\n}\n\nexport default SectionMotivation\n","import React from \"react\"\nimport { IMapContainerProps } from \"../../types\"\n\nconst MapContainer: React.FC<IMapContainerProps> = ({children}) => {\n  return <div className=\"map-container\"> {children}</div>\n}\n\nexport default MapContainer\n","import React from \"react\"\nimport P from \"../P\"\nimport logo from \"../../svg/zaitra-logo.svg\"\n\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <P className=\"white\">\n        Copyright ©\n        <img src={logo} alt=\"zaitra logo\" />\n        <a href=\"https://zaitra.io/\" target=\"blank\">\n          Zaitra s.r.o\n        </a>\n        <span> 2020</span>\n      </P>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\n// JSONs\nimport allRoofs from \"./data/bb_all_roofs.json\"\nimport bb1Roofs from \"./data/bb1_roofs.json\"\nimport bb2Roofs from \"./data/bb2_roofs.json\"\nimport bb1Categ from \"./data/bb1_roofs_categorized.json\"\nimport bb2Categ from \"./data/bb2_roofs_categorized.json\"\n\nimport { centerPrague, centerHlavni , bbOneBounds, bbTwoBounds, heatBounds } from \"./coordinates\";\nimport logo from \"../../svg/green-roofs-logo-leaf.svg\";\n// import components\nimport Map from \"../../components/Map\"\nimport Navbar from \"../../components/Navbar\";\nimport SectionTop from \"../../components/SectionTop\";\nimport SectionExplanation from \"../../components/SectionExplanation\";\nimport SectionMotivation from \"../../components/SectionMotivation\";\nimport Container from \"../../components/Container\";\nimport Shine from \"../../components/Shine\";\nimport H2 from \"../../components/H2\";\nimport P from \"../../components/P\";\nimport MapContainer from \"../../components/MapContainer\";\nimport Footer from \"../../components/Footer\";\nimport heatmapImg from \"../../img/heatmap.jpg\";\nimport heatmapImgAfter from \"../../img/heatmap-after.jpg\";\n\nconst App: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"App\">\n      {/*\n       * Nav\n       */}\n      <Navbar />\n      {/*\n       * Top of a page\n       */}\n      <SectionTop />\n       {/*\n       * Explanation what is green roof\n       */}\n      <SectionExplanation />\n      {/*\n       * Motivation why we care about that\n       */}\n      <SectionMotivation />\n      {/*\n       * All roofs map with text\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <H2>\n            <Trans i18nKey=\"sections.map-description.header\">\n                <Shine>.</Shine>\n            </Trans>\n          </H2>\n          <img className=\"pb-5 pl-3\" src={logo} alt=\"Green roofs logo leaf\" />\n          <P>\n            <Trans i18nKey=\"sections.map-description.description1\">\n                <Shine>.</Shine>\n            </Trans>\n          </P>\n          <P>\n            <Trans i18nKey=\"sections.map-description.description2\">\n                <Shine>.</Shine>\n            </Trans>\n          </P>\n          <P>\n            <Trans i18nKey=\"sections.map-description.description3\">\n                <Shine>.</Shine>\n            </Trans>\n          </P>\n        </section>\n      </Container>\n      {/*\n       * All roofs\n       */}\n      <MapContainer>\n        <Map geojsonData={[allRoofs]} zoom=\"15\" center={centerPrague} popups={false} />\n      </MapContainer>\n      {/*\n       * Roofs only in bounding box 1&2 description + Map\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <P>\n            <Trans i18nKey=\"sections.map-description-bb.description\">\n              <Shine>.</Shine>\n            </Trans>\n          </P>\n        </section>\n      </Container>\n      <MapContainer>\n        <Map\n          geojsonData={[bb1Roofs, bb2Roofs]}\n          zoom=\"15\"\n\t\t  center={centerPrague}\n\t\t  heatMapImg={heatmapImg}\n          heatMapBounds={heatBounds}\n          bounds={[bbOneBounds, bbTwoBounds]}\n        />\n      </MapContainer>\n      {/*\n       * Roofs only in bounding box 1&2 categorized Description + Map\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <P>\n          <Trans i18nKey=\"sections.map-description-bb-cat.description\">\n            <Shine>.</Shine>\n          </Trans>\n          </P>\n        </section>\n      </Container>\n      <MapContainer>\n        <Map geojsonData={[bb1Categ, bb2Categ]} bounds={[bbOneBounds, bbTwoBounds]}zoom=\"15\" center={centerPrague} />\n      </MapContainer>\n      {/*\n       * Conclusion\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <P>\n            <Trans i18nKey=\"sections.conclusion\">\n              <Shine>.</Shine>\n            </Trans>\n          </P>\n        </section>\n      </Container>\n\t  <section className=\"container-fluid\">\n\t\t<div className=\"row section-difference mb-5\">\n\t\t\t<div className=\"col-6\">\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<P>{t(\"sections.difference.before\")}:</P>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<MapContainer>\n\t\t\t\t\t<Map \n\t\t\t\t\t\tbounds={[bbOneBounds, bbTwoBounds]}\n\t\t\t\t\t\tzoom=\"15\" \n\t\t\t\t\t\tcenter={centerHlavni} \n\t\t\t\t\t\theatMapBounds={heatBounds}\n\t\t\t\t\t\theatMapImg={heatmapImg}\n\t\t\t\t\t\tlegend={false}\n\t\t\t\t\t/>\n\t\t\t\t</MapContainer>\n\t\t\t</div>\n\t\t\t<div className=\"col-6\">\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<P>{t(\"sections.difference.after\")}:</P>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<MapContainer>\n\t\t\t\t\t<Map \n\t\t\t\t\t\tbounds={[bbOneBounds, bbTwoBounds]}\n\t\t\t\t\t\tzoom=\"15\" \n\t\t\t\t\t\tcenter={centerHlavni} \n\t\t\t\t\t\theatMapBounds={heatBounds}\n\t\t\t\t\t\theatMapImg={heatmapImgAfter}\n\t\t\t\t\t\tlegend={false}\n\t\t\t\t\t/>\n\t\t\t\t</MapContainer>\n\t\t\t</div>\n\t\t</div>\n\t  </section>\n      {/*\n       * Footer\n       */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./i18n\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/zaitra-logo.34b5f337.svg\";","module.exports = __webpack_public_path__ + \"static/media/heatmap.dc9cf7d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green-roofs-logo-leaf.41eb8d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-roofs-logo.9d3a3414.svg\";","module.exports = __webpack_public_path__ + \"static/media/heatmap-after.4cc581d2.jpg\";"],"sourceRoot":""}