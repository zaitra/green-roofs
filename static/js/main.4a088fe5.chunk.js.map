{"version":3,"sources":["i18n.ts","containers/App/coordinates.ts","components/MapControl/index.tsx","components/MapLegendRowInfo/index.tsx","components/MapLegendRow/index.tsx","components/MapLegend/index.tsx","components/MapLegend/utils.ts","components/Marker/index.tsx","components/Map/utils.tsx","components/Map/index.tsx","components/Navbar/index.tsx","components/SectionTop/index.tsx","components/H2/index.tsx","components/P/index.tsx","components/Shine/index.tsx","components/Container/index.tsx","components/SectionExplanation/index.tsx","components/SectionMotivation/index.tsx","components/MapContainer/index.tsx","components/Footer/index.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx","svg/zaitra-logo.svg","img/heatmap.jpg","svg/green-roofs-logo-leaf.svg","svg/green-roofs-logo.svg","img/heatmap-after.jpg"],"names":["resources","en","translation","cz","translationCZ","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","centerPrague","centerHlavni","bbOneBounds","bbTwoBounds","heatBounds","DumbControl","Control","extend","options","className","onOff","handleOff","onAdd","_controlDiv","DomUtil","create","this","DomEvent","disableClickPropagation","onRemove","map","off","withLeaflet","props","Object","assign","forceUpdate","leafletElement","getContainer","ReactDOM","createPortal","children","MapControl","MapLegendRowInfo","tooltipLabelText","tooltipText","tooltipLists","icon","faInfoCircle","size","item","i","key","content","direction","tagName","tipContentClassName","MapLegendRow","categoryData","color","ownerKey","ownerValue","MapLegend","legendList","showPopupsInfoMessage","t","useTranslation","legendType","categoryType","getDataByCategoryType","Marker","getCenterFromDegrees","data","length","num_coords","X","Y","Z","lat","Math","PI","lon","cos","sin","atan2","hyp","sqrt","defaultGeo","fillOpacity","weight","opacity","Map","geojsonData","zoom","center","bounds","heatMapBounds","geoStyle","addFeatures","legend","popups","heatMapImg","onEachFeature","feature","layer","featureStyle","categoryNumber","console","error","Error","getStyleByFeatureCategoryNumber","properties","cat1","cat2","cat3","cat4","getCategoryNumberByProperties","setStyle","geometry","coordinates","on","e","lati","lngd","url","win","window","open","focus","bindPopup","objectid","keepInView","closePopup","openPopup","center3d","el","document","getElementsByClassName","render","style","height","width","padding","bootstrapURLKeys","defaultCenter","defaultZoom","disableDefaultUI","mapTypeId","rotateControl","vlastnictvi","vyuziti_uzemi","shape_area","toFixed","attachComponentToPopup","scrollWheelZoom","TileLayer","bound","Rectangle","shortid","generate","GeoJSON","undefined","ImageOverlay","position","Navbar","changeLanguage","href","target","rel","src","logo","alt","onClick","type","SectionTop","H2","P","Shine","Container","SectionExplanation","i18nKey","SectionMotivation","MapContainer","Footer","App","allRoofs","bb1Roofs","bb2Roofs","heatmapImg","bb1Categ","bb2Categ","heatmapImgAfter","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4a088fe5.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationCZ from \"./locales/cz/translation.json\";\nimport translationEN from \"./locales/en/translation.json\";\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  cz: {\n    translation: translationCZ\n  }\n};\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"cz\",\n    fallbackLng: \"cz\", // use en if detected lng is not available\n    keySeparator: \".\",\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","/// Center of Prague\nexport const centerPrague = [50.086385, 14.423693];\nexport const centerHlavni = [50.085433, 14.429571];\n// first rectangle\nexport const bbOneBounds = [\n  [50.090759, 14.428063],\n  [50.087322, 14.437146]\n];\n// second rectangle\nexport const bbTwoBounds = [\n  [50.086436, 14.424331],\n  [50.0795, 14.432383]\n];\n// heat coordinates\nexport const heatBounds = [\n  [49.91156, 13.90904],\n  [50.2512, 14.89781]\n];\n","import ReactDOM from \"react-dom\";\nimport { MapControl, withLeaflet } from \"react-leaflet\";\nimport { Control, DomUtil, DomEvent } from \"leaflet\";\n/*\n *\n *  Code copied from library: https://www.npmjs.com/package/react-leaflet-control\n * \tIt's basic wrapper of element on map you can put to 4 map corners\n */\nconst DumbControl = Control.extend({\n  options: {\n    className: \"\",\n    onOff: \"\",\n    handleOff: function noop() {}\n  },\n\n  onAdd(/* map */) {\n    var _controlDiv = DomUtil.create(\"div\", this.options.className);\n    DomEvent.disableClickPropagation(_controlDiv);\n    return _controlDiv;\n  },\n\n  onRemove(map :any) {\n    if (this.options.onOff) {\n      map.off(this.options.onOff, this.options.handleOff, this);\n    }\n\n    return this;\n  }\n});\n\nexport default withLeaflet(\n  class LeafletControl extends MapControl {\n    createLeafletElement(props :any) {\n      return new DumbControl(Object.assign({}, props));\n    }\n\n    componentDidMount() {\n      if (super.componentDidMount)\n        super.componentDidMount();\n\n      // This is needed because the control is only attached to the map in\n      // MapControl's componentDidMount, so the container is not available\n      // until this is called. We need to now force a render so that the\n      // portal and children are actually rendered.\n      this.forceUpdate();\n    }\n\n    render() {\n      if (!this.leafletElement || !this.leafletElement.getContainer()) {\n        return null;\n      }\n      return ReactDOM.createPortal(\n\t\tthis.props.children,\n\t\t// @ts-ignore\n        this.leafletElement.getContainer()\n      );\n    }\n  }\n);\n","import React from 'react';\nimport Tooltip from 'react-tooltip-lite';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { IMapLegendRowInfoProps } from '../../types';\n\nconst MapLegendRowInfo: React.FC <IMapLegendRowInfoProps> = ({\n\ttooltipLabelText, \n\ttooltipText\n}) => {\n\tconst iconInfo = <FontAwesomeIcon icon={faInfoCircle} size=\"2x\"/>\n\tlet firstColumnItems = [iconInfo, tooltipLabelText]\n\n\tconst tooltipLists = firstColumnItems.map((item, i) => {\n\t\treturn (\n\t\t\t<li className={`list-group-item d-flex align-items-center`} key={i}>\n\t\t\t\t<Tooltip\n\t\t\t\t\tcontent={(\n\t\t\t\t\t\t<p>{tooltipText}</p>\n\t\t\t\t\t)}\n\t\t\t\t\tdirection=\"down\"\n\t\t\t\t\ttagName=\"span\"\n\t\t\t\t\tclassName=\"target\"\n\t\t\t\t\ttipContentClassName=\"\"\n\t\t\t\t\t>\n\t\t\t\t\t{item}\n\t\t\t\t</Tooltip>\n\t\t\t</li>\n\t\t)\n\t})\n\n\treturn (\n\t\t<ul className=\"list-group-info list-group list-group-horizontal mt-1\">\n\t\t\t{tooltipLists}\n\t\t</ul>\n\t)\n}\n\nexport default MapLegendRowInfo;","import React from 'react';\nimport { IMapLegendRowProps } from '../../types';\n\nconst MapLegendRow: React.FC <IMapLegendRowProps> = ({\n\tcategoryData\n}) => (\n\t<ul className=\"list-group list-group-horizontal\">\n\t\t<li className={`list-group-item d-flex align-items-center ${categoryData.color}`}>\n\t\t\t\t<i className={categoryData.color}></i> \n\t\t\t<span className=\"label\">\n\t\t\t\t<span>{ categoryData.ownerKey }: </span>\n\t\t\t\t<strong>{categoryData.ownerValue}</strong>\n\t\t\t</span>\n\t\t</li>\n\t</ul>\n)\n\n\nexport default MapLegendRow;","\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\";\nimport MapLegendRowInfo from '../MapLegendRowInfo';\nimport MapLegendRow from \"../MapLegendRow\";\nimport { getDataByCategoryType } from \"./utils\"\nimport { IMapLegendNewProps } from \"../../types\";\n\nconst MapLegend: React.FC <IMapLegendNewProps> = ({\n\tlegendList,\n\tshowPopupsInfoMessage\n}) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div className=\"legend\">\n\t\t\t{legendList.map((legendType :any, i) => {\n\t\t\t\tlet categoryData = getDataByCategoryType(legendType, t);\n\t\t\t\treturn <MapLegendRow categoryData={categoryData} key={i}/>;\n\t\t\t})}\n\t\t\t{showPopupsInfoMessage ? \n\t\t\t\t<div>\n\t\t\t\t\t<MapLegendRowInfo tooltipLabelText=\"Klikni na budovu\" tooltipText={t('map.legend.after-click')}/>\n\t\t\t\t\t<MapLegendRowInfo tooltipLabelText=\"Najeď myší na budovu\" tooltipText={t('map.legend.after-hover')}/>\n\t\t\t\t</div>\n\t\t\t: null}\n\t\t</div>\n\t)\n}\n\nexport default MapLegend;\n\n","\nexport const getDataByCategoryType = (categoryType :String, t:any) => {\n\tswitch(categoryType) {\n\t\tcase \"1\":\n\t\t\treturn {\n\t\t\t\tcolor: \"purple\",\n\t\t\t\townerKey: t(\"map.legend.description.owner\"),\n\t\t\t\townerValue: t(\"map.legend.description.prague\")\n\t\t\t}\n\t\tcase \"2\":\n\t\t\treturn {\n\t\t\t\tcolor: \"blue\",\n\t\t\t\townerKey: t(\"map.legend.description.owner\"),\n\t\t\t\townerValue: t(\"map.legend.description.cz\")\n\t\t\t}\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\tcolor: \"green\",\n\t\t\t\townerKey: t(\"map.legend.description.owner\"),\n\t\t\t\townerValue: t(\"map.legend.description.different\")\n\t\t\t}\n\t}\n};","import React from 'react';\n\nexport const Marker = () => (\n    <div className=\"marker\"/>\n);\n\nexport default Marker;","import ReactDOM from \"react-dom\";\nimport GoogleMapReact from 'google-map-react'\nimport { Marker } from '../Marker';\nimport React from \"react\";\n\nexport const getStyleByFeatureCategoryNumber = (categoryNumber :number) => {\n\tswitch (categoryNumber) {\n\t\tcase 1:\n\t\t\treturn {\n\t\t\t\tcolor: \"#7f00ff\" // purple\n\t\t\t}\n\t\tcase 2:\n\t\t\treturn {\n\t\t\t\tcolor: \"#4990E2\" // blue\n\t\t\t}\n\t\tcase 3:\n\t\tcase 4:\n\t\t\treturn {\n\t\t\t\tcolor: \"#009548\" // default green\n\t\t\t}\n\t\tdefault:\n\t\t\tconsole.error(\"categoryNumber\", categoryNumber)\n\t\t\tthrow new Error(\"Something is wrong with getStyleByFeatureCategoryNumber method!\")\n\t}\n}\n\nexport const getCategoryNumberByProperties = (properties :any) :number => {\n\tconst {\n\t\t\"Kategorie I\": cat1,\n\t\t\"Kategorie II\": cat2,\n\t\t\"Kategorie III\": cat3,\n\t\t\"Kategorie IV\": cat4\n\t} = properties\n\t// Category 1\n\tif (cat1 && cat2 && cat3 && cat4) {\n\t\treturn 1;\n\t}\n\t// Category 2\n\telse if (!cat1 && cat2 && cat3 && cat4) {\n\t\treturn 2;\n\t}\n\t// Category 3\n\telse if (!cat1 && !cat2 && cat3 && cat4) {\n\t\treturn 3;\n\t}\n\t// Category 4\n\treturn 4;\n\t\n}\n\t\nexport const attachComponentToPopup = (feature: any, t: any) =>  {\n\tconst bulgarianConstant = 0.00015;\n\tconst {lat, lng} :any = getCenterFromDegrees(feature.geometry.coordinates[0][0])\n\tconst center3d = {  \n\t\tlat: lat + bulgarianConstant,\n\t\tlng: lng,\n\t  };\n\tlet labelContent = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{ height: '200px', width: '100%', padding: '0 0 25px' }} className=\"google-map\">\n\t\t\t\t\t<GoogleMapReact \n\t\t\t\t\t\tbootstrapURLKeys={{ key: \"AIzaSyA_7d7iWDbFsq50av6Py5zqhJAaSkfwGn4\" }}\n\t\t\t\t\t\tdefaultCenter={center3d}\n\t\t\t\t\t\tdefaultZoom={18}\t\t\t\t\t\n\t\t\t\t\t\toptions = {{\n\t\t\t\t\t\t\tdisableDefaultUI: true,\n\t\t\t\t\t\t\tmapTypeId: \"hybrid\",\n\t\t\t\t\t\t\trotateControl: false\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Marker />\n\n\t\t\t\t\t</GoogleMapReact>\n\t\t\t\t</div>\n\t\t\t\t<span><strong>{t('map.popup.owner')}:</strong> {feature.properties.vlastnictvi}</span><br/>\n\t\t\t\t<span><strong>{t('map.popup.used-for')}:</strong> {feature.properties.vyuziti_uzemi}</span><br/>\n\t\t\t\t<span><strong>{t('map.popup.area')}:</strong> {feature.properties.shape_area.toFixed(2)} m2</span><br/><br/>\n\t\t\t</div>\n\t\t)\n\t}\n\tlet el = document.getElementsByClassName(feature.properties.objectid)[0];\n\t\n\tif (el) {\n\t\tReactDOM.render(\n\t\t\tlabelContent(),\n\t\t\tel\n\t\t);\n\t}\n}\n\n/**\n * Get a center latitude,longitude from an array of like geopoints\n *\n * @param array data 2 dimensional array of latitudes and longitudes\n * For Example:\n * $data = array\n * (\n *   0 = > array(45.849382, 76.322333),\n *   1 = > array(45.843543, 75.324143),\n *   2 = > array(45.765744, 76.543223),\n *   3 = > array(45.784234, 74.542335)\n * );\n*/\nexport const getCenterFromDegrees = (data :any) => {\n    if (!(data.length > 0)){\n        return false;\n    } \n\n    let num_coords = data.length;\n\n    let X = 0.0;\n    let Y = 0.0;\n    let Z = 0.0;\n\n    for(let i = 0; i < data.length; i++){\n        let lat = data[i][0] * Math.PI / 180;\n        let lon = data[i][1] * Math.PI / 180;\n\n        let a = Math.cos(lat) * Math.cos(lon);\n        let b = Math.cos(lat) * Math.sin(lon);\n        let c = Math.sin(lat);\n\n        X += a;\n        Y += b;\n        Z += c;\n    }\n\n    X /= num_coords;\n    Y /= num_coords;\n    Z /= num_coords;\n\n    let lon = Math.atan2(Y, X);\n    let hyp = Math.sqrt(X * X + Y * Y);\n    let lat = Math.atan2(Z, hyp);\n\n    let newX = (lat * 180 / Math.PI);\n    let newY = (lon * 180 / Math.PI);\n\n    return {\n\t\tlng: newX,\n\t\tlat: newY\n\t};\n}","import React from 'react'\nimport shortid from \"shortid\"\nimport {\n  Map as LeafletMap,\n  TileLayer,\n  GeoJSON,\n  Rectangle,\n  ImageOverlay\n} from \"react-leaflet\"\nimport { LatLngBoundsExpression } from 'leaflet'\nimport { useTranslation } from \"react-i18next\"\nimport { IMapProps } from \"../../types\"\nimport Control from '../MapControl';\nimport MapLegend from '../MapLegend';\nimport { getStyleByFeatureCategoryNumber, getCenterFromDegrees, getCategoryNumberByProperties, attachComponentToPopup } from './utils'\n\nconst defaultGeo = {\n  fillOpacity: 0.7,\n  weight: 2,\n  opacity: 1,\n  color: \"#009548\"\n}\n\nconst boundsColor = \"#bfbf04\"\n\nconst Map: React.FC <IMapProps> = ({ \n  geojsonData = [],\n  zoom = 0, center = [0,0], \n  bounds = [],\n  heatMapBounds = [],\n  geoStyle = defaultGeo,\n  addFeatures = true,\n  legend = true,\n  popups = true,\n  heatMapImg = '',\n}) => {\n\tconst { t } = useTranslation();\n\tconst onEachFeature = (feature: any, layer: any) => {\n\t\tconst featureCategoryNumber = getCategoryNumberByProperties(feature.properties);\n\t\tconst featureStyle = getStyleByFeatureCategoryNumber(featureCategoryNumber)\n\t\tlayer.setStyle(featureStyle)\n\t\tconst {lat, lng} :any = getCenterFromDegrees(feature.geometry.coordinates[0][0])\n\t\tlayer.on('click', (e :any) => {\n\t\t\t// http://maps.google.com/maps?&z=18&mrt=all&t=h&q=40+12\n\t\t\tconst zoom = 20\n\t\t\tconst typeSearch = 'yp'//INSERT_TYPE_OF_SEARCH\n\t\t\tconst mapType = 'm' // TYPE_OF_MAP\n\t\t\tconst lati = lat // INSERT_MAP_LAT_COORDINATES\n\t\t\tconst lngd = lng //INSERT_MAP_LONG_COORDINATES\n\t\t\tconst url = `http://maps.google.com/maps?&z=${zoom}&mrt=${typeSearch}&t=${mapType}&q=${lati}+${lngd}`\n\t\t\tconst win = window.open(url, '_blank');\n\t\t\tif (win != null) {\n\t\t\t  win.focus();\n\t\t\t}\t\t  \n\t\t});\n\n\t\tif (!popups) return;\n\n\t\tlayer.bindPopup('',  {\n\t\t\tclassName: feature.properties.objectid,\n\t\t\tkeepInView: true\n\t\t});\n\t\n\t\tlayer.on('mouseout', (e :any) => {\n\t\t\tlayer.closePopup()\n\t\t});\n\t\n\t\tlayer.on('mouseover', (e :any) => {\n\t\t\tlayer.openPopup()\n\t\t\tattachComponentToPopup(feature, t)\n\t\t});\n\t}\n\n  return (\n    <LeafletMap zoom={zoom} center={center} scrollWheelZoom={false}>\n      {/* GENERATE map background */}\n      <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n\n      {/*\n        * GENERATE rectangle/s \n        *\n      */}\n      {bounds.map((bound: LatLngBoundsExpression) => {\n        return (\n          <Rectangle\n            bounds={bound}\n            color={boundsColor}\n            opacity={0.8}\n            fillOpacity={0}\n            key={shortid.generate()}\n          />\n        )\n      })}\n      {/* \n        * GENERATE layer/s of geojson \n        *\n      */}\n      {geojsonData.map((geojsonData: GeoJSON.GeoJsonObject) => {\n\t\treturn <GeoJSON data={geojsonData} \n\t\t\tkey={shortid.generate()}\n\t\t\tstyle={geoStyle}\n\t\t\tonEachFeature={addFeatures ? onEachFeature : undefined} \n\t\t\t/>\n      })}\n\n      {/* \n        * GENERATE Image overlay \n        * \n      */}\n      {heatMapBounds.length > 0 ? (\n        <ImageOverlay url={heatMapImg} bounds={heatMapBounds} opacity={0.80} />\n      ) : null}\n      {/* \n        * GENERATE legend for map\n        * \n      */}\n\t  \t{ legend\n\t\t \t?  <Control position=\"bottomright\">\n\t\t\t\t\t<MapLegend legendList={[\"1\", \"2\", \"3/4\"]} showPopupsInfoMessage={popups}/>\n\t\t\t\t</Control>\n\t\t\t: null \n\t\t}\n    </LeafletMap>\n  )\n}\n\nexport default Map","import React from \"react\";\nimport i18n from \"../../i18n\";\nimport logo from \"../../svg/zaitra-logo.svg\";\n\nconst Navbar: React.FC = () => {\n  const changeLanguage = (lng: any) => {\n    i18n.changeLanguage(lng);\n  };\n  return (\n    <nav className=\"navbar navbar-light fixed-top justify-content-between\">\n      <a\n        href=\"https://zaitra.io/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"navbar-brand\"\n      >\n        <img src={logo} alt=\"Company zaitra logo\" />\n      </a>\n      <div className=\"list\">\n        <button\n          className=\"btn my-2 my-sm-0\"\n          onClick={() => changeLanguage(\"en\")}\n          type=\"button\"\n        >\n          EN\n        </button>\n        <button\n          className=\"btn my-2 my-sm-0\"\n          onClick={() => changeLanguage(\"cz\")}\n          type=\"button\"\n        >\n          CZ\n        </button>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport logo from \"../../svg/green-roofs-logo.svg\"\nimport { useTranslation } from \"react-i18next\";\n\nconst SectionTop: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"header\">\n      <div className=\"text-vertical-center\">\n        <img src={logo} className=\"logo\" alt=\"Green roofs\" />\n        <h2>{t('sections.top.header')}</h2>\n        <p>{t('sections.top.description')}</p>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a className=\"arrows\">\n          <span /> <span />\n        </a>\n      </div>\n    </div>\n  )\n}\n\nSectionTop.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  t: PropTypes.func\n}\n\nexport default SectionTop\n","import React from \"react\"\nimport { H2Props } from \"../../types\"\n\nconst H2: React.FC<H2Props> = (props) => {\n  return <h2 className={`${props.className} h2`}> {props.children}</h2>\n}\n\nexport default H2\n","import React from \"react\"\nimport { IPProps } from \"../../types\"\n\nconst P: React.FC<IPProps> = (props) => {\n  return <p className={`paragraph ${props.className}`}> {props.children}</p>\n}\n\nexport default P \n","import React from \"react\"\nimport { IShineProps } from \"../../types\"\n\nconst Shine: React.FC<IShineProps> = (props) => {\n  return <span className=\"shine\"> {props.children}</span>\n}\n\nexport default Shine\n","import React from \"react\"\nimport { IContainerProps } from \"../../types\"\n\nconst Container: React.FC<IContainerProps> = (props) => {\n  return <div className={`container ${props.className}`}> {props.children}</div>\n}\n\nexport default Container\n","import React from \"react\"\nimport H2 from \"../H2\"\nimport P from \"../P\"\nimport Shine from \"../Shine\"\nimport Container from \"../Container\"\nimport { Trans } from \"react-i18next\"\n\nconst SectionExplanation: React.FC = () => {\n  return (\n    <section className=\"section text-center\">\n      <Container>\n        <H2>\n          <Trans i18nKey=\"sections.explanation.header\">\n            <Shine>.</Shine>\n          </Trans>\n        </H2>\n        <P className=\"mt-5\">\n          <Trans i18nKey=\"sections.explanation.description\">\n            {/* each <0></0> tag from translation replace with shine component */}\n            {/* See for details: https://react.i18next.com/latest/trans-component */}\n            <Shine>.</Shine>\n          </Trans>\n        </P>\n      </Container>\n    </section>\n  )\n}\n\nexport default SectionExplanation\n","import React from \"react\"\nimport H2 from \"../H2\"\nimport P from \"../P\"\nimport Shine from \"../Shine\"\nimport Container from \"../Container\"\nimport { useTranslation, Trans } from \"react-i18next\"\n\nconst SectionMotivation: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <section className=\"section motivation text-center\">\n      <Container>\n        <H2 className=\"mt-4\">\n          <Shine>{t(\"sections.motivation.header\")}</Shine>\n        </H2>\n        <P className=\"my-5 white\">\n          <Trans i18nKey=\"sections.motivation.par1\">\n            <Shine>.</Shine>\n            <a href=\"https://golemio.cz/cs/node/1443\" target=\"blank\" className=\"shine\"></a>\n          </Trans>\n        </P>\n        <P className=\"mb-5 white\">\n          <Trans i18nKey=\"sections.motivation.par2\">\n              <Shine>.</Shine>\n          </Trans>\n        </P>\n      </Container>\n    </section>\n  )\n}\n\nexport default SectionMotivation\n","import React from \"react\"\nimport { IMapContainerProps } from \"../../types\"\n\nconst MapContainer: React.FC<IMapContainerProps> = ({children}) => {\n  return <div className=\"map-container\"> {children}</div>\n}\n\nexport default MapContainer\n","import React from \"react\"\nimport P from \"../P\"\nimport logo from \"../../svg/zaitra-logo.svg\"\n\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <P className=\"white\">\n        Copyright ©\n        <img src={logo} alt=\"zaitra logo\" />\n        <a href=\"https://zaitra.io/\" target=\"blank\">\n          Zaitra s.r.o\n        </a>\n        <span> 2020</span>\n      </P>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\n// JSONs\nimport allRoofs from \"./data/bb_all_roofs.json\"\nimport bb1Roofs from \"./data/bb1_roofs.json\"\nimport bb2Roofs from \"./data/bb2_roofs.json\"\nimport bb1Categ from \"./data/bb1_roofs_categorized.json\"\nimport bb2Categ from \"./data/bb2_roofs_categorized.json\"\n\nimport { centerPrague, centerHlavni , bbOneBounds, bbTwoBounds, heatBounds } from \"./coordinates\";\nimport logo from \"../../svg/green-roofs-logo-leaf.svg\";\n// import components\nimport Map from \"../../components/Map\"\nimport Navbar from \"../../components/Navbar\";\nimport SectionTop from \"../../components/SectionTop\";\nimport SectionExplanation from \"../../components/SectionExplanation\";\nimport SectionMotivation from \"../../components/SectionMotivation\";\nimport Container from \"../../components/Container\";\nimport Shine from \"../../components/Shine\";\nimport H2 from \"../../components/H2\";\nimport P from \"../../components/P\";\nimport MapContainer from \"../../components/MapContainer\";\nimport Footer from \"../../components/Footer\";\nimport heatmapImg from \"../../img/heatmap.jpg\";\nimport heatmapImgAfter from \"../../img/heatmap-after.jpg\";\n\nconst App: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"App\">\n      {/*\n       * Nav\n       */}\n      <Navbar />\n      {/*\n       * Top of a page\n       */}\n      <SectionTop />\n       {/*\n       * Explanation what is green roof\n       */}\n      <SectionExplanation />\n      {/*\n       * Motivation why we care about that\n       */}\n      <SectionMotivation />\n      {/*\n       * All roofs map with text\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <H2>\n            <Trans i18nKey=\"sections.map-description.header\">\n                <Shine>.</Shine>\n            </Trans>\n          </H2>\n          <img className=\"pb-5 pl-3\" src={logo} alt=\"Green roofs logo leaf\" />\n          <P>\n            <Trans i18nKey=\"sections.map-description.description1\">\n                <Shine>.</Shine>\n            </Trans>\n          </P>\n          <P>\n            <Trans i18nKey=\"sections.map-description.description2\">\n                <Shine>.</Shine>\n            </Trans>\n          </P>\n          <P>\n            <Trans i18nKey=\"sections.map-description.description3\">\n                <Shine>.</Shine>\n            </Trans>\n          </P>\n        </section>\n      </Container>\n      {/*\n       * All roofs\n       */}\n      <MapContainer>\n        <Map geojsonData={[allRoofs]} zoom=\"15\" center={centerPrague} popups={false} />\n      </MapContainer>\n      {/*\n       * Roofs only in bounding box 1&2 description + Map\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <P>\n            <Trans i18nKey=\"sections.map-description-bb.description\">\n              <Shine>.</Shine>\n            </Trans>\n          </P>\n        </section>\n      </Container>\n      <MapContainer>\n        <Map\n          geojsonData={[bb1Roofs, bb2Roofs]}\n          zoom=\"15\"\n\t\t  center={centerPrague}\n\t\t  heatMapImg={heatmapImg}\n          heatMapBounds={heatBounds}\n          bounds={[bbOneBounds, bbTwoBounds]}\n        />\n      </MapContainer>\n      {/*\n       * Roofs only in bounding box 1&2 categorized Description + Map\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <P>\n          <Trans i18nKey=\"sections.map-description-bb-cat.description\">\n            <Shine>.</Shine>\n          </Trans>\n          </P>\n        </section>\n      </Container>\n      <MapContainer>\n        <Map geojsonData={[bb1Categ, bb2Categ]} bounds={[bbOneBounds, bbTwoBounds]}zoom=\"15\" center={centerPrague} />\n      </MapContainer>\n      {/*\n       * Conclusion\n       */}\n      <Container>\n        <section className=\"section text-center\">\n          <P>\n            <Trans i18nKey=\"sections.conclusion\">\n              <Shine>.</Shine>\n            </Trans>\n          </P>\n        </section>\n      </Container>\n\t  <section className=\"container-fluid\">\n\t\t<div className=\"row section-difference mb-5\">\n\t\t\t<div className=\"col-6\">\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<P>{t(\"sections.difference.before\")}:</P>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<MapContainer>\n\t\t\t\t\t<Map \n\t\t\t\t\t\tbounds={[bbOneBounds, bbTwoBounds]}\n\t\t\t\t\t\tzoom=\"15\" \n\t\t\t\t\t\tcenter={centerHlavni} \n\t\t\t\t\t\theatMapBounds={heatBounds}\n\t\t\t\t\t\theatMapImg={heatmapImg}\n\t\t\t\t\t\tlegend={false}\n\t\t\t\t\t/>\n\t\t\t\t</MapContainer>\n\t\t\t</div>\n\t\t\t<div className=\"col-6\">\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t<P>{t(\"sections.difference.after\")}:</P>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<MapContainer>\n\t\t\t\t\t<Map \n\t\t\t\t\t\tbounds={[bbOneBounds, bbTwoBounds]}\n\t\t\t\t\t\tzoom=\"15\" \n\t\t\t\t\t\tcenter={centerHlavni} \n\t\t\t\t\t\theatMapBounds={heatBounds}\n\t\t\t\t\t\theatMapImg={heatmapImgAfter}\n\t\t\t\t\t\tlegend={false}\n\t\t\t\t\t/>\n\t\t\t\t</MapContainer>\n\t\t\t</div>\n\t\t</div>\n\t  </section>\n      {/*\n       * Footer\n       */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./i18n\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/zaitra-logo.34b5f337.svg\";","module.exports = __webpack_public_path__ + \"static/media/heatmap.dc9cf7d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green-roofs-logo-leaf.41eb8d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-roofs-logo.9d3a3414.svg\";","module.exports = __webpack_public_path__ + \"static/media/heatmap-after.4cc581d2.jpg\";"],"sourceRoot":""}